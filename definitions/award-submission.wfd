enum AwardType {
    NobelPrize,
    FieldsMedal
}

enum AwardPublishingResult {
    Undetermined => "undetermined",
    Publish => "publish",
    Reject => "reject",
    Published => "published"
}


task AwardSubmission {

    processKey: "award-submission"

    model+input {
        awardType: AwardType,
        date: DateTime,
        citation: String,

        outcome: AwardPublishingResult <state, default:AwardPublishingResult.Undetermined>,

        awardees: [Awardee] <set>,
        files: [File] <set>,

        awardeeAcceptances: [AwardeeAcceptance] <join-to-field:"awardSubmissionId">,

        figshareArticleId: String
    }

    form "submission" extend "MulitpleStages" {

        outcomes: [
            { "complete" => Complete },
            { "save-for-later" => Save },
            { "cancel" => Cancel, confirmation:true, message:"Are you sure you want to cancel this award submission?" }
        ]

        options: {
           heading: "Assign New Award"
        }

        elements: {

            { Stage, label:"Step 1: Award Details", children: {

                { TextArea => citation, label:"Award citation" }

                { Date => date, label:"Date Awarded" }

                { FileUploader => files, label:"Associated award files" }

            } }

            { Stage, label:"Step 2: Select Awardees", children: {

                { AwardeesEditor => awardees, label:"Awarded to" }

                { StageButton, default:true, outcome:"complete", label:"Submit" }

            } }

        }
    }

    form "final-decision" {

        outcomes: [
            {
                "publish" => Complete,
                state: {
                    outcome: AwardPublishingResult.Publish
                }
            },
            {
                "reject" => Complete,
                state: {
                    outcome: AwardPublishingResult.Reject
                }
            }
        ]

        elements: {

            { Button, default:true, outcome:"publish", label:"Publish Award" }

            { Button, outcome:"reject", label:"Reject Award" }

        }
    }

}


enum AwardAcceptanceOutcome {
    Pending => "pending",
    Accepted => "accepted",
    Rejected => "rejected"
}

enum AwardeePublishingOutcome {
    Unknown => "unknown",
    Include => "include",
    Exclude => "exclude"
}


task AwardeeAcceptance {

    model+input <no-create> {
        awardSubmission: AwardSubmission <join-field:"awardSubmissionId">,
        awardee: Awardee <join-field:"awardeeId">,
        comments: String,

        acceptanceOutcome: AwardAcceptanceOutcome <state, default:AwardAcceptanceOutcome.Pending>,
        publishingOutcome: AwardeePublishingOutcome <state, default:AwardeePublishingOutcome.Unknown>
    }

    form "acceptance" extend "SideBySideHeroPanels" {

        options: {
           heading: "Accept Award"
        }

        outcomes: [
            {
                "accept" => Complete,
                state: {
                    acceptanceOutcome: AwardAcceptanceOutcome.Accepted
                }
            },
            {
                "reject" => Complete,
                state: {
                    acceptanceOutcome: AwardAcceptanceOutcome.Rejected
                }
            }
        ]

        elements: {

            { Panel, heading:"Award Details", children:{

                { StaticText => awardSubmission.citation, label:"Award Citation" }

                { StaticText => awardSubmission.date, label:"Date", format:"MMM DD, YYYY" }

                { AwardeeListing => awardSubmission.awardees, label:"Awarded to" }

                { FilesListing => awardSubmission.files, label:"Associated files and media" }

            } }

            { Panel, heading:"Your Details", children:{

                { AwardeeDetails => awardee, label:"Your Particulars" }

                { AwardeeORCIDIdentityLink => awardee, label:"Your ORCID details", required:true }

                { TextArea => comments, label:"Comments" }

            } }

            { DecisionPanel, children:{

                { Button, outcome:"reject", label:"Reject Award" }
                { Button, default:true, outcome:"accept", label:"Accept Award" }

            } }

        }
    }

    form "confirm-awardee" {

        outcomes: [
            {
                "include-awardee" => Complete,
                state: {
                    publishingOutcome: AwardeePublishingOutcome.Include
                }
            },
            {
                "exclude-awardee" => Complete,
                state: {
                    publishingOutcome: AwardeePublishingOutcome.Exclude
                }
            }
        ]

        elements: {

            { Button, default:true, outcome:"include-awardee", label:"Include Awardee" }

            { Button, outcome:"exclude-awardee", label:"Exclude Awardee" }

        }
    }
}
